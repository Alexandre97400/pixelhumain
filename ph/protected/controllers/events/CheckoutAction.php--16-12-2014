<?php
/*
- validate Ajax request
- check refred email user exists
- set group specific information
- add application / module specific information 
- insert or update group
- TODO : add event to cart
 */
class CheckoutAction extends CAction
{
   public function run() {
   
			$m = new MongoClient("mongodb://oceatoon:6ognom9_$@open-atlas.org:27017/");
$db = $m->selectDB ( "pixelhumainQA" );
			$checkout = Yii::app()->session['checkout'];
			$person = Yii::app()->session['personMap'];
	
	
			$tickets = new MongoCollection($db, 'tickets');
			//search for any pending tickets 
			$unpayedTickets = $tickets->find(array("payed"=>false,"person.email"=>$person['email']));
			foreach($unpayedTickets as $upt)
				$tickets->remove(array("_id" => $upt["_id"]));
			//issue ticket
			//with non validated status
			$now = new DateTime();
			$now->setTimezone(new DateTimeZone('Indian/Reunion'));
			

			$offer = array(
				"@context" => "http://schema.org",
				"@Type"    => "Ticket",
				"dateIssued" => $now->format("d/m/Y G:i"),
				"tickets"=>array(
					"@Type"    => "Ticket",
					"quantity" => 0,
					"@list"    => array()
				),
				"totalPrice"  => $checkout["total"],
				"person"	  => array(
					"@Type"	  => "Person",
					"email"   => (string)$person["email"]
				),
				"event"=>array(
					"@Type"   => "Event",
					"@id"     => $checkout["events"]
				),
				"payed"     => false,
				"printed"   => 0,
				"printPref" => $person["printPref"]
			);
			$now = time();
			$uniqueNum = (string)new MongoId();
			$ticketToken = md5($now."azotlive".$uniqueNum);
			
			$events_array = explode(",", $checkout["events"]);
			$events = array_filter($events_array);
			foreach($events as $event){
			$event_data = PHDB::findOne( PHType::TYPE_EVENTS, array( "_id" => new MongoId( $event ) ) );
				
				if(isset($checkout["qtyCat1"]) && $checkout["qtyCat1"]>0 ){
					$ticketNumbers = array();
					for( $ix=0; $ix < $checkout["qtyCat1"]; $ix++){
						$uniqueNum = (string)new MongoId();
						$ticketNumber = array(
							"ticketNumber" => $uniqueNum,
							"time" => $now,
							"ticketToken" =>$ticketToken
						);
						array_push($ticketNumbers,$ticketNumber);
					}
					$ticket = array(
						"ticketNumbers" => $ticketNumbers,
						"quantity" => $checkout["qtyCat1"],
						"price"  => $checkout["price1"],
						"type"  => "-25ans",
						"@id" => $event,
						"name" => $event_data['name']
					);
					array_push($offer["tickets"]["@list"], $ticket );
					$offer["tickets"]["quantity"] += $checkout["qtyCat1"];
				}
				if(isset($checkout["qtyCat2"]) && $checkout["qtyCat2"]>0){
					$ticketNumbers = array();
					for($ix=0; $ix < $checkout["qtyCat2"]; $ix++){
						$uniqueNum = (string)new MongoId();
						$ticketNumber = array(
							"ticketNumber" => $uniqueNum,
							"time"=> $now,
							"ticketToken" => $ticketToken
						);
						array_push($ticketNumbers,$ticketNumber);
					}
					$ticket = array(
						"ticketNumbers" => $ticketNumbers,
						"ticketToken" => $ticketToken,
						"quantity"  => $checkout["qtyCat2"],
						"price" => $checkout["price2"],
						"type" => "+25ans",
						"@id" => $event,
						"name" => $event_data['name']
					);
					array_push( $offer["tickets"]["@list"], $ticket );
					$offer["tickets"]["quantity"] += $checkout["qtyCat2"];
				}
				if(isset($checkout["qtyCat3"]) && $checkout["qtyCat3"] > 0){
					$ticketNumbers = array();
					for($ix=0; $ix < $checkout["qtyCat3"]; $ix++){
						$uniqueNum = (string)new MongoId();
						$ticketNumber = array(
							"ticketNumber" => $uniqueNum,
							"time"=>$now,
							"ticketToken" => $ticketToken
						);
						array_push($ticketNumbers,$ticketNumber);
					}
					$ticket = array(
						"ticketNumbers" => $ticketNumbers,
						"ticketToken" => $ticketToken,
						"quantity"  => $checkout["qtyCat3"],
						"price" => $checkout["price3"],
						"type" => "passVIP",
						"@id" => $event,
						"name" => $event_data['name'],
					);
					array_push($offer["tickets"]["@list"], $ticket );
					$offer["tickets"]["quantity"] += $checkout["qtyCat3"];
				}
			}
			$tickets->insert($offer);
			
			Yii::app()->session['offer'] = (string)$offer["_id"];
			$offerID = Yii::app()->session['offer'];

   
require_once("../ph/protected/extensions/paynplug/lib/Payplug.php");
$parametersFile = __DIR__ . "/params.json";
$parameters;

/* Loads parameters (from PayPlug if needed) */
if ( ! file_exists($parametersFile)) {
    try {
        $parameters = Payplug::loadParameters("azotlivecontact@gmail.com", "MVPU6TXU5M4GSKP3");
        $parameters->saveInFile($parametersFile);
    } catch (Exception $e) {
        die("Fail : \n" . $e->getMessage());
    }
}
else {
    try {
        $parameters = Parameters::loadFromFile($parametersFile);
    } catch (Exception $e) {
        die("Fail : \n" . $e->getMessage());
    }
}

Payplug::setConfig($parameters);
/* Creates a payment request */
$params = array();
$paymentUrl;
$payment = new PaymentUrl($amount, "EUR", $ipnUrl);

try {
    $paymentUrl = $payment->generateUrl(array(
        "amount" => (floatval) $_POST["amount"] * 100,
        "cancelUrl" => "http://qa.pixelhumain.com/ph/azotlive",
        "currency" => "EUR",
        "email" => $_POST["email"],
        "firstName" => $_POST["firstName"],
        "ipnUrl" => "http://qa.pixelhumain.com/ph/azotlive",
        "lastName" => $_POST["lastName"],
		"order" => $offerID,
		"customer" => $_POST["customer"],
		"returnUrl"=> "http://qa.pixelhumain.com/ph/azotlive/buy/confirm/"
    ));

    //header("Location: $paymentUrl");
    //exit();
	
	echo $paymentUrl;
	
} catch (Exception $e) {
    die("Fail : \n" . $e->getMessage());
}

	}
}