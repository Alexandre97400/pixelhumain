<?php
/*
- validate Ajax request
- check refred email user exists
- set group specific information
- add application / module specific information 
- insert or update group
- TODO : add event to cart
 */
class IpnFormAction extends CAction
{
   public function run() {
   
$m = new MongoClient("mongodb://oceatoon:6ognom9_$@open-atlas.org:27017/");
$db = $m->selectDB ( "pixelhumainQA" );
require_once("../ph/protected/extensions/paynplug/lib/Payplug.php");

$parametersFile = "../ph/protected/extensions/paynplug/azotlive/params.json";
$headers = getallheaders();
$parameters = Parameters::loadFromFile($parametersFile);

/* For more security, put the keys in uppercase and retrieve
 * the signature using the key in uppercase
 */
$headers = array_change_key_case($headers, CASE_UPPER);
$signature = base64_decode($headers['PAYPLUG-SIGNATURE']);

/* The data is sent in the body of the POST request in JSON format
 * (MIME type = application / json).
 * Example : {"state": "paid", "customer", "2", "transaction_id": 4121, "custom_data": "29", "order": "42"}
 */
$body = file_get_contents('php://input');

// test body string
$body = '{"first_name": "Tib", "email": "oceatoon@gmail.com", "last_name": "Kat", "order": "53fef2c2e9ce27d845788b5d", "customer": "53e8b9645894c088d2177ab1", "state": "paid", "id_transaction": 563699, "status": 0, "origin": " payplug-php 0.9 PHP 5.3.27", "custom_data": null, "custom_datas": null, "amount": 100}';
$data = json_decode($body);

$pbkey = $parameters->payplugPublicKey;
/* $pbkey = PayPlug public key that you saved from the setup page */
$publicKey = openssl_pkey_get_public($pbkey);
$isSignatureValid = openssl_verify($body , $signature, $pbkey, OPENSSL_ALGO_SHA1);

/* Take into account the IPN and send an email with the confirmation*/
/* if($isSignatureValid){
    $message = "IPN received for ".$data->first_name." ".$data->last_name." for an amount of ".(float)($data->amount / 100)." EUR<br/>".$body;
    //echo $message."<br/>";
	//mail("oceatoon@gmail.com","IPN Received",$message);
} else {
    //mail("oceatoon@gmail.com","IPN Failed","The signature was invalid");
	echo "The signature was invalid"."<br/>";
} */

@session_start();
ob_start();

//include("config.php");
echo $data->customer."<br>";
echo $data->order."<br>";
echo $data->email."<br>";

//Tickets
$tickets = new MongoCollection($db, 'tickets');
$ts = $tickets->findOne(array("_id"=>new MongoId($data->order)));

$persons = new MongoCollection($db, 'persons');
$p = $persons->findOne(array("email"=>$ts["person"]["email"]));

//Event
$events = new MongoCollection($db, 'events');
$e = $events->findOne(array("_id"=>new MongoId($data->customer)));

$d = $e['startDate'];
$d = explode("/",$e['startDate']);
setlocale(LC_TIME, "fr_FR");
$d = ucfirst(strftime("%A %d %B %Y",@mktime(0, 0, 0, $d[1], $d[0], $d[2])));
$h = $e['doorTime'];

//Organiser 
$organizations = new MongoCollection($db, 'organizations');
$o = $organizations->findOne(array("_id"=>new MongoId($e["organizer"]["@id"])));

/* if($isSignatureValid)
{ */
	//update payment status 
	$tickets = new MongoCollection($db, 'tickets');
	$t = $tickets->findOne(array("_id"=>new MongoId($data->order)));

	//if( isset($t) && !$t["payed"] ){

		if( isset($data->id_transaction) ) {
		$payed = array("token"=>$data->id_transaction);
		} 

		$tickets->update( array("_id"=>new MongoId($data->order)), 
						  array( '$set' => array( "payed"=>$payed,"datePrint"=>time() ),
								 '$inc' => array("printed"=>1 ) ) 
						);
	
		$currentInventoryValue = $e["offers"]["inventoryLevel"]["value"];
		//generate pdf and save to folder
		if( isset($ts) && isset($ts["tickets"]) && isset($ts["tickets"]["@list"])){
			$now = date("d/m/Y h:i");
			foreach( $ts["tickets"]["@list"] as $key1=>$t )
			{
				foreach( $t["ticketNumbers"] as $key2=>$tn )
				{
					//echo "-----------------------------<br/>";
					/*echo $now."<br/>";
					echo $o["name"]." presente"."<br/>";
					echo $t['type']."<br/>";
					echo $e['name']."<br/>";
					echo "**".$t['price']." Euros**<br/>";
					echo $d." a ".$h." ".$e['location']['name']."<br/>";*/
					$currentInventoryValue++;
					//update ticket number sequence
					$ts["tickets"]["@list"][$key1]["ticketNumbers"][$key2]["ticketNumber"] = str_pad($currentInventoryValue, 5, '0', STR_PAD_LEFT);
					$ts["tickets"]["@list"][$key1]["ticketNumbers"][$key2]["ticketToken"] = md5( $tn["time"]."azotlive".$ts["tickets"]["@list"][$key1]["ticketNumbers"][$key2]["ticketNumber"]);
					//echo "ticketNumber : ".$ts["tickets"]["@list"][$key]["ticketNumber"]."<br/>";
					//echo "N° LIC : ".$o["licenceID"]."<br/>";
					//echo "genBarcode num : ".$tn["time"]."azotlive".$ts["tickets"]["@list"][$key]["ticketNumber"]."<br/>";
					//echo "below barcode num : ".$ts["tickets"]["@list"][$key]["ticketToken"]."<br/>";
					//echo "<br/><br/>";
					//update Event inventory
					$events->update( array("_id"=>new MongoId($data->customer)), 
									 array( '$inc' => array("offers.inventoryLevel.value"=>1 ) ) 
									);
				}
			}
			$tickets->update( array("_id"=>new MongoId($data->order)), 
							  array( '$set' => array( "tickets.@list"=>$ts["tickets"]["@list"] ))  
							);
		}
		//send email with pdf attached
		//include("http://".Yii::app()->createUrl("/azotlive/api/generateTicket"));
		
		
		?>
		<script>
			$(document).ready(function(){
				
					params = {  "orderID" : <?php echo $data->order; ?>	};
					<?php if( isset( $this->module->id ) && $this->loginRegister ) { ?>
						params.loginRegister=1;
						params.app = "<?php echo $this->module->id?>";
					<?php } ?>

					console.log(params);
						$.ajax({
							type: "POST",
							url: baseUrl+"/<?php echo $this->module->id?>/api/generateTicket",
							data: params,
							success: function(data){
							if(data.result)
							{
								//window.location.reload();	
							}
							else {
								alert(data.msg);
							}
						},
						dataType: "json"
						});
				
				});
			</script>
		<?php
		//session_destroy();
		//echo "Success"."<br/>";
	//} 
/* } 
 else 
{
mail("oceatoon@gmail.com","IPN Failed","The signature was invalid");
//echo "The signature was invalid 2";
} */

	}
}